type Query {
  home(
    # The ID of the object
    id: ID!
  ): HomeNode
} 

type Mutation {
  createSlideshowItem(
    input: CreateSlideshowItemInput!
  ): CreateSlideshowItemPayload
}

type HomeNode implements Node {
  # The ID of the object
  id: ID!
  slug: String!
  createdOn: DateTime!
  updatedOn: DateTime!
  isArchived: Boolean!
  name: String!
  homeItemList(
    offset: Int
    before: String
    after: String
    first: Int
    last: Int
  ): HomeItemNodeConnection!
}

type HomeItemNodeConnection {
  # Pagination data for this connection.
  pageInfo: PageInfo!

  # Contains the nodes in this connection.
  edges: [HomeItemNodeEdge]!
}

input CreateSlideshowItemInput {
  title: String!
  image: Upload!
  clientMutationId: String
}

type CreateSlideshowItemPayload {
  slideshowItem: SlideshowItemNode
  message: String
  clientMutationId: String
}